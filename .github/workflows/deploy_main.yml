name: Backend
on:
  push:
    branches:
      - main
      - I2G-36-deploy-BE

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up Python 3.10.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.8

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        shell: bash
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR }}:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    container:
      image: python:3.10
    needs:
      - build
    steps:
      - name: Install dependencies
        run: |
          apt-get update -qq
          pip install awscli
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login EKS
        run: |
          aws eks update-kubeconfig --name lychee
          kubectl version
        shell: bash

      - name: Trigger deploy
        run: |
          kubectl config set-context --current --namespace=cs300
          kubectl set image deployment/cs300-deployment \
            cs300-container=${{ secrets.ECR }}:${{ github.sha }} \
            cs300-migrate=${{ secrets.ECR }}:${{ github.sha }} \
            cs300-collectstatic=${{ secrets.ECR }}:${{ github.sha }} 
          kubectl rollout restart deployment/cs300-deployment
        shell: bash
